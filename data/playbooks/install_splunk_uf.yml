---
# Splunk Universal Forwarder Installation Playbook
# This playbook installs and configures Splunk Universal Forwarder

name: Install Splunk Universal Forwarder
description: Install and configure Splunk Universal Forwarder on target hosts
version: 1.0.0
author: SIEMply Team

# Variables with defaults
vars:
  splunk_version: "9.4.3"
  splunk_install_dir: "/opt/splunkforwarder"
  splunk_user: "splunk"
  splunk_group: "splunk"
  splunk_admin_password: "changeme"
  deployment_server: ""
  deployment_app: ""
  splunk_start_args: "--accept-license --no-prompt --answer-yes"
  enable_boot_start: true

# Target hosts (can be overridden at runtime)
hosts: 
  - role: splunk_uf

# Tasks to execute
tasks:
  - name: Check if Splunk UF is already installed
    command: "[ -d {{ splunk_install_dir }} ] && echo 'Found' || echo 'Not Found'"
    register: splunk_check
    changed_when: false

  - name: Create temporary directory
    command: mkdir -p /tmp/splunk_install
    when: splunk_check.stdout != "Found"

  - name: Download Splunk UF installer
    command: >
      cd /tmp/splunk_install && 
      wget -O splunkforwarder.tgz 
      'https://download.splunk.com/products/universalforwarder/releases/{{ splunk_version }}/linux/splunkforwarder-{{ splunk_version }}-Linux-x86_64.tgz'
    when: splunk_check.stdout != "Found"
    timeout: 300

  - name: Create Splunk user and group
    command: >
      getent group {{ splunk_group }} || groupadd {{ splunk_group }}; 
      getent passwd {{ splunk_user }} || useradd -m -g {{ splunk_group }} {{ splunk_user }}
    when: splunk_check.stdout != "Found"

  - name: Extract Splunk UF
    command: cd {{ splunk_install_dir | dirname }} && tar -xzf /tmp/splunk_install/splunkforwarder.tgz
    when: splunk_check.stdout != "Found"
    timeout: 120

  - name: Set ownership
    command: chown -R {{ splunk_user }}:{{ splunk_group }} {{ splunk_install_dir }}
    when: splunk_check.stdout != "Found"

  - name: Create user-seed.conf
    template:
      src: templates/user-seed.conf.j2
      dest: "{{ splunk_install_dir }}/etc/system/local/user-seed.conf"
      owner: "{{ splunk_user }}"
      group: "{{ splunk_group }}"
      mode: "0600"
    when: splunk_check.stdout != "Found"

  - name: Configure deployment client
    template:
      src: templates/deploymentclient.conf.j2
      dest: "{{ splunk_install_dir }}/etc/system/local/deploymentclient.conf"
      owner: "{{ splunk_user }}"
      group: "{{ splunk_group }}"
      mode: "0600"
    when: deployment_server != "" and splunk_check.stdout != "Found"

  - name: Start Splunk
    command: >
      {{ splunk_install_dir }}/bin/splunk start {{ splunk_start_args }}
    become: true
    become_user: "{{ splunk_user }}"
    when: splunk_check.stdout != "Found"
    timeout: 180

  - name: Enable boot-start
    command: >
      {{ splunk_install_dir }}/bin/splunk enable boot-start -user {{ splunk_user }} {{ splunk_start_args }}
    when: splunk_check.stdout != "Found" and enable_boot_start|bool

  - name: Clean up
    command: rm -rf /tmp/splunk_install
    when: splunk_check.stdout != "Found"

# Handlers (run after tasks if notified)
handlers:
  - name: restart splunk
    command: "{{ splunk_install_dir }}/bin/splunk restart"
    become: true
    become_user: "{{ splunk_user }}"

# Templates
templates:
  - name: user-seed.conf.j2
    content: |
      [user_info]
      USERNAME = admin
      PASSWORD = {{ splunk_admin_password }}

  - name: deploymentclient.conf.j2
    content: |
      [deployment-client]
      phoneHomeIntervalInSecs = 60

      [target-broker:deploymentServer]
      targetUri = {{ deployment_server }} 